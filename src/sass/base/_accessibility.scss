/**
 * @file
 * Accessibility features.
 *
 * Provide some classes for controlling display for accessibility.
 *
 */

// Makes an element visually hidden, but accessible.
// @see http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
@mixin element-invisible {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
  white-space: nowrap;
}
.element-invisible,
.visually-hidden,
%element-invisible {
  @include element-invisible;
}

// Turns off the element-invisible effect.
@mixin element-invisible-off {
  position: static !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: auto;
}
.element-invisible-off,
%element-invisible-off {
  @include element-invisible-off;
}

// Makes an element visually hidden by default, but visible when focused.
@mixin element-focusable {
  @include element-invisible;
  &:active,
  &:focus {
    @include element-invisible-off;
  }
}
.element-focusable,
%element-focusable {
  @include element-focusable();
}

// Skip links will be completely hidden until the link has focus.
.skip-link {
  display: block;
  background: #2d2d2d;
  color: #fff;
  text-align: center;
  height: 0;
  &:focus {
    height: auto;
    padding: 10px;
  }
}

// Screen reader style.
.screen-reader-text {
  clip: rect(1px, 1px, 1px, 1px);
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  &:focus {
    background-color: #f1f1f1;
    border-radius: 3px;
    box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.6);
    clip: auto !important;
    color: #21759b;
    display: block;
    height: auto;
    left: 5px;
    line-height: normal;
    padding: 15px 23px 14px;
    text-decoration: none;
    top: 5px;
    width: auto;
    z-index: 100000;
  }
}

// Removing focus outline on main region.
#main {
  outline: none;
}

